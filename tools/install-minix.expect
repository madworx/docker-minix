#!/usr/bin/expect -f

set bootvars "-boot d -cdrom /minix.iso"
source common.expect

#
# Login and run installer.
#
expect "login: " { send "root\n" }

set timeout 120
expect "# " { send "setup\n" }
expect "\n:" { send "\n" }
expect "Keyboard type?" { send "\n" }
expect "Press ENTER for automatic mode" { send "\n" }
expect "Enter the disk number to use:" { send "\n" }
expect "Enter the region number to use" { send "\n" }
expect "Are you sure you want to continue?" { send "yes\n" }
expect "How big do you want your /home" { send "0\n" }
expect "Block size in kilobytes?" { send "\n" }

expect "All files will now be copied to your hard disk."
puts "\n\nExpect: Found start of 'installing files' section. Supressing normal output."
log_user 0
exp_internal 0

# We allow each set to take up to 10xTMOUT of time.
set waitcount 10
expect {
    "Saving random data.." { }
    -re "Extracting (.*)\[.]{3}" {
        set bundle $expect_out(1,string)
        puts "MINIX is working on extracting set: $bundle."
        set waitcount 10
        exp_continue
    }
    timeout  {
        puts "MINIX is still working on extracting this set."
        incr waitcount -1
        if {$waitcount == 0} {
                puts "Set extraction timed out!"
        } else {
                exp_continue
        }
    }
}

log_user 1
puts "\n\nExpect: Installer copied all files. Re-enabling output.\n\n"
exp_internal -f /tmp/expect.log 0
set timeout 300
expect "Interface choice? " { send "\n" }
expect "Configuration choice? " { send "\n" }
expect "Menu choice? " { send "\n" }

expect "# " { send "mount /dev/c0d0p0s0 /mnt\n" }

#
# Patch the boot.cfg to use serial console.
#
expect "# " { send "sed -e 's#^\\(menu=Start.*\\)#\\1 console=tty00#' /mnt/boot.cfg > /mnt/boot.cfg.new\n" }
expect "# " { send "mv /mnt/boot.cfg.new /mnt/boot.cfg\n" }
expect "# " { send "umount /mnt\n" }

#
# Shutdown
#
expect "# " { send "poweroff -d\n" }
expect eof
